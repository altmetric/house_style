Style/BlockDelimiters:
  EnforcedStyle: semantic
  FunctionalMethods:
    - before
    - given
    - given!
    - watch
    - times
    - try
    # logger methods that can take blocks
    - debug
    - error
    - info
    - warning
    # Rubocop defaults which may otherwise be overwritten
    - let
    - let!
    - subject
    - watch
Style/CollectionMethods:
  Enabled: true
Style/CommandLiteral:
  EnforcedStyle: mixed
Style/Copyright:
  Enabled: false
Style/Documentation:
  Enabled: false
Layout/EmptyLineBetweenDefs:
  AllowAdjacentOneLineDefs: true
Style/FrozenStringLiteralComment:
  Enabled: false
Style/GuardClause:
  MinBodyLength: 3
Style/HashSyntax:
  EnforcedStyle: ruby19_no_mixed_keys
Layout/FirstArrayElementIndentation:
  EnforcedStyle: consistent
Layout/FirstHashElementIndentation:
  EnforcedStyle: consistent
Style/MethodCalledOnDoEndBlock:
  Enabled: true
Layout/MultilineOperationIndentation:
  Enabled: false
Layout/MultilineMethodCallIndentation:
  EnforcedStyle: indented
Layout/LineLength:
  Max: 120
  Details: >-
    If lines are too short, methods become hard to read because you must
    constantly jump from line to line. If lines are too long, following
    the flow can be hard because it becomes harder to scan back and
    locate the start of the next line. 80 characters is generally a bit
    too short; 120 characters is a good compromise.
Style/NonNilCheck:
  IncludeSemanticChanges: true
Style/NumericLiterals:
  MinDigits: 6
Style/SignalException:
  EnforcedStyle: semantic
Style/StringLiterals:
  EnforcedStyle: 'single_quotes'
  Enabled: true
Style/StringMethods:
  Enabled: true
Style/AccessModifierDeclarations:
  Enabled: false
